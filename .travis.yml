language: c
os: linux
# Ubuntu xenial 16.04 comes with valgrind-3.11, which can't handle the
# RDRAND instructions and aborts with "Illegal instruction".  This is not a
# problem with Ubuntu bionic 18.04, which has valgrind-3.13.
dist: bionic
addons:
  apt:
    packages:
      - valgrind
jobs:
  include:
    - compiler: gcc
      env: CFLAGS_STRICT="-Wall -Wextra -Werror -Wpedantic -pedantic-errors -Wno-clobbered"
        USE_VALGRIND=1
    - compiler: clang
      env: CFLAGS_STRICT="-Wall -Wextra -Werror -Weverything -Wno-#warnings -Wno-pedantic -Wno-padded -Wno-format-nonliteral -Wno-disabled-macro-expansion -Wno-missing-noreturn -Wno-reserved-id-macro -Wno-unused-macros -Wno-documentation-unknown-command"
        USE_VALGRIND=1
    - os: osx
      compiler: clang
      env: CFLAGS_STRICT="-Wall -Wextra -Werror -Weverything -Wno-#warnings -Wno-pedantic -Wno-padded -Wno-format-nonliteral -Wno-disabled-macro-expansion -Wno-missing-noreturn -Wno-reserved-id-macro -Wno-documentation-unknown-command"
        USE_VALGRIND=0
env:
  global:
    # Some projects need -std=c99 to specify library support for ./configure
    - CFLAGS="-std=c99 -O2"
    - secure: "X6lt/dxOtQqLrnZAd35eBC7DE9J+mePHzuThMvh9i7gF1LKZdfaiG9UuH6gVobGYB+JqxZcblHAvnrGRRi8ASCunVDqZDtdXKnuCJJUaW4n9F+Fe94sYIwRYMNwTIEzlSnRbpNmrmOenHPAq4JR1MvLyz4AE0GpHeCCXl0Obx9xh4+ejP8mGoRn8P9Ueii1UMuQSBigdPAcOK7cbTrB7VrwdPbasfj+w23yJCrROg0/vzbKUIYVWaMBK8b3csOHhFYiqPpBpRQqV5jb5XLnkEBa0Hr60TrcQOEIpRy0rJZ2iKxqtfQBXRHTvbTWDlHf2PbYZqpzpDV40Ad2oC48akI4w0ynJBGR98hP5+mAtqzNfLhSNa6AL8ZUL9KTQZvKBMliIGNM1CBSLXBrVnP591idwT3rjeZCWYfr9vyFpyWdedtWYKA6svsjSf8Jd/brsPIZs3+SDHclWbi2jPGRDY8UL1Kd5x26w5l3fF0LTIs/pghNpLIhoRFYWOPCkqNJhqfbX/9fcy0JB3IvhnKEhCkRUTKhGKNuR/0BkRfiXkEIVquM+zz65F9ULiScwQ31P9cKPDezxAUs5nxfdQqb84k+4UAoRI7ErIC+gqQCD9c9iOM6smnJw/OG4Klco+mCKmyOXZPRDVFh1U41pvWotMo6tu2rvQqyh8AjPySUZm/8="
    - COVERITY_SCAN_PROJECT_NAME="Tarsnap/libcperciva"
    - COVERITY_SCAN_BRANCH_PATTERN="coverity-scan"
    - COVERITY_SCAN_NOTIFICATION_EMAIL="cperciva@tarsnap.com"
    - COVERITY_SCAN_BUILD_COMMAND="make all clean"
before_install:
  # Handle Coverity scan
  - >
    if [[ "${TRAVIS_BRANCH}" == "coverity-scan" ]]; then
      if [[ "${TRAVIS_JOB_NUMBER##*.}" == "1" ]]; then
        curl -s "https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh" | bash || true
      else
        echo "Not main job; do nothing."
      fi
      echo "Done Coverity scan."
      sleep 1
      exit 0
    fi
  # Otherwise, act normally.
  - 'if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CFLAGS="-I/usr/local/opt/openssl/include $CFLAGS" LDFLAGS="-L/usr/local/opt/openssl/lib $LDFLAGS"; fi'
# We can't use strict flags in CFLAGS as a general environment
# variable, because that messes up ./configure and coverity-scan.
script: make CFLAGS="$CFLAGS $CFLAGS_STRICT" all && make test
